  HOST = 
  USER = 
  DATABASE = 
  PASSWORD =
  KEY = 

HISTORY AND SUBTITLE

   1 "word": "node ./src/subtitle/addWordFolder.js",                       // Скачування слів в папки по буквах

   2 "subtitle": "node ./src/subtitle/workWithVideoSubtitle/allFanction.js",                     // Скрипт запуску функцій по скачуванню субтитрів 

   3 "fetch": "node ./src/newFetch/allInfoCicle",                      // ЗАПИТ НА ВСІ ДАНІ  FETCH

   4 "history": "node ./src/addHistoryYoutube/addHistoryYoutube.js",       // Створює таблицю video_user_id та пушить в неї відео історії користувача

   5 "arrHistory": "node ./src/arrHistory/arrHistory.js",                       // Очікує на появу масиву з історією та коли появляється відправляє його в addHistoryYoutube.js та видаляє його

   6 "openZip": "node ./src/openZip/openZip.js",                           // Розпаковує ZIP файл та закидує дані в проект дял подальших дій а сам ZIP зберігає в архів
 
   - "renameZip": "nodemon ./src/openZip/renameZip.js",                       //  Переіменовує ZIP файл при скачуванні для розпаковки

   - "saveUserZip": "nodemon ./src/openZip/saveUserZip.js",                   //  Зберігає історію


USER
   7 "userTable": "node ./src/subtitle/wordsTableUsers/userTable",         //   Запис папок по буквах, окремо користувачів 
   
 !!!!!   8 "updateHistory": "node ./src/updateHistory/updateHistory.js",         //   Цикл оновлення історії

CHANNELS

    11. "createChannel": "node ./src/createChannel/addDbChannel.js",         // тсворення каналу при реєстраці

KEY Create    

    11+ node ./src/key/create/db_user                                          // Створення КЛЮЧА
    
    11+ node ./src/key/activation/processUsers.js                                    // авторизація ключа в ютюб v3   

SERVER                                  

    12. node ./src/api/server.js                                                         // SERVER 3000

TOKEN

   
    13. % node ./src/autoTokenCreateAndUpdate/authorize/authorize.js     (ЗАПУСТИ СЕРВЕР localhost:3000)                  // створення токена для плейліста

    14. node ./src/
    /startAutoToken_token/autoUpdate            //  auto Update Token

    CHANNEL TABLE

    15. node ./src/cartoon/channel/addChanenlsDB                                       // Додавання каналів в таблицю channel

CARTOONS

    16. node ./src/cartoon/videoDb/addCartoonDB                                         // Додавання мультфільмів в таблицю cartoon

VIRTUAL  HISTORY  
   
    17. node ./src/cartoon/virtualUsrCartoon/createHistoriFile.js                       // Записувати нові відео в файл JSON (ВІРТУАЛЬНА ІСТОРІЯ МУЛЬТФІЛЬМІВ)
    
  #

    18. node ./src/cartoon/#usersVirtual/relevansVideos.js                             // записуємо та відсортовуємо #відео в унікальний масив

    18.1 node ./src/cartoon/#usersVirtual/allTagTopVideos.js                             // запуск запису відео без хештегу типу пустий хештег, ТОП на зараз  TOP_ALL_#

    19. node ./src/cartoon/#usersVirtual/createTagJson                                //  добавляння  і комбінування в файл JSON  обєктів історії відео по хештегу


TABLE UPDATES VIDEOS

    20. node ./src/videosUpdates/addVideosInTableUpdates                             // записує нові відео в таблицю videosUpdates
    21. node ./src/videosUpdates/updateData                                          //  обновляє дані по відео

    AUDIO 
     
    22. node ./src/saveAudio/saveAudio.js                                          // зберігаємо аудіо при розбіжності мови


ALL_CHANNELS 
     
    node ./src/channelsInfo/insertUniqueChannels.js                                // запис нових каналів до таблиці  all_channels з videos_all (якщо такі є)

     node ./src/channelsInfo/updateChannelDetails.js                                // оновлення всіх інфо по каналах в таблиці all_channels/ 
     node ./src/channelsInfo/userChannelVideosAll/addVideosInHistory.js                                 //  додаємо відео з кожного каналу до історії віртуального користувача

ДОДАТКОВО

оновлення таблиць плейлістів playlists_... окремий код test_playlists(тестовий варіант)

оригінал lists_pleylists азпускаємо окремо на відео та окремо на канали є 2 різні all_fanction та all_fanction_channels

Запускаємо allFanctions.js і всі плейлісти по ТОП відео оновляються. 
     